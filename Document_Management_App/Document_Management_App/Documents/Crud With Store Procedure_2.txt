using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Text.RegularExpressions;
using System.Data.SqlClient;
using System.Data;

namespace RegularExpresion1
{
    class Program
    {
        class Customer
        {
           static string conlink = "Data Source = VS_AMARJADHAV; Initial Catalog = AMAR; Integrated Security = True; Pooling = False";
            SqlConnection con = new SqlConnection(conlink);
           
            int id;
            string name;
            string address ,mobileNum;
              
            public void AddStudent()
            {

                Console.WriteLine("Enter The User Data");
                Console.WriteLine("Enter Name");
                 name = Console.ReadLine();
                Console.WriteLine("Enter Address");
                 address = Console.ReadLine();

                Console.WriteLine("Enter Mobile Number");
                 mobileNum =Console.ReadLine();

                Regex rx = new Regex(@"^([0]|\+91)?[789]\d{9}$");

            //    07955206520
            //  +917955206520
            //  7955206520
             
            //   7552065205


            //    ^ ([0]|\+91)?


            //+91
            //+918802422462
            //+919802422462
            
            //    07150166859
            //    08698962568
            //    09150166859
               
                
                
     


               if ( rx.IsMatch(mobileNum))
                {

                   string conlink = "Data Source = VS_AMARJADHAV; Initial Catalog = AMAR; Integrated Security = True; Pooling = False";
                    SqlConnection con = new SqlConnection(conlink);

                    con.Open();
                    // string str= "Insert into Customer(name,address) values('"+name+"','"+address+"')";
                    SqlCommand cmd = new SqlCommand("AddCustomer", con);
                    cmd.CommandType = CommandType.StoredProcedure;

                   

                    cmd.Parameters.AddWithValue("@Name", name);
                    cmd.Parameters.AddWithValue("@Address", address);
                    cmd.Parameters.AddWithValue("@mobileNo", mobileNum);
                    cmd.ExecuteNonQuery();
                    con.Close();
                }
                else
                {
                    Console.WriteLine("Enter Valid Mobile Number");

                }

            }

            public void ShowData()
            {
                //string conlink = "Data Source = VS_AMARJADHAV; Initial Catalog = AMAR; Integrated Security = True; Pooling = False";
              //  SqlConnection con = new SqlConnection(conlink);

                SqlCommand cmd = new SqlCommand("ShowData", con);
                cmd.CommandType = CommandType.StoredProcedure;
                con.Open();
             
                SqlDataReader rdr = cmd.ExecuteReader();
                Console.WriteLine("  ID         NAME        ADDRESS        Mobile Number ");
                Console.WriteLine("__________________________________________");
                while (rdr.Read())
                {
                    
                    Console.Write("      "+rdr["Id"]);
                    Console.Write("      "+rdr["Name"]);
                    Console.Write("      "+rdr["Address"]);
                    Console.Write("      "+rdr["mobileNo"]);
                    Console.WriteLine("\n --------------------------------");

                }
            }

            public void UpdateData()
            {
                Console.WriteLine("What You Want To Update \n 1)Name \n 2)Address");
                int ch = Convert.ToInt32(Console.ReadLine());
                int id;
                string Newname, NewAddress;
                switch (ch)
                {
                    case 1:
                               Console.WriteLine("Enter The ID of Record Which Want To Update");
                                id = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine("Enter New Name");
                                  Newname = Console.ReadLine();



                               //string conlink = "Data Source = VS_AMARJADHAV; Initial Catalog = AMAR; Integrated Security = True; Pooling = False";
                               SqlConnection con = new SqlConnection(conlink);
                        con.Open();
                        
                        //  SqlCommand cmd = new SqlCommand("UpadateName",con);
                      //  var x = from k in con.DataSource. 

                               
                        //con.Open();
                        //cmd.CommandType = CommandType.StoredProcedure;
                        //cmd.Parameters.AddWithValue("@Id", id);
                        //cmd.Parameters.AddWithValue("@Name", Newname);

                        //cmd.ExecuteNonQuery();

                        
                              


                        break;
                    case 2:
                                Console.WriteLine("Enter The ID of Record Which Want To Update");
                                 id = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine("Enter New Address");
                        NewAddress = Console.ReadLine();

                        //string conlink1 = "Data Source = VS_AMARJADHAV; Initial Catalog = AMAR; Integrated Security = True; Pooling = False";
                        SqlConnection con1 = new SqlConnection(conlink);

                        SqlCommand cmd1 = new SqlCommand("UpadateAddress", con1);
                        con1.Open();
                        cmd1.CommandType = CommandType.StoredProcedure;
                        cmd1.Parameters.AddWithValue("@Id", id);
                        cmd1.Parameters.AddWithValue("@Address", NewAddress);
                        cmd1.ExecuteNonQuery();

                        
                        break;
                }


            }

            public void DeleteData()
            {
                string pwd1 = "Amar@123";
                Console.WriteLine("Enter The ID of Record Which Want Delete");
                id = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Enter PassWord");
                string pwd = Console.ReadLine();
                if (pwd.Equals(pwd1))
                {
                    //string conlink1 = "Data Source = VS_AMARJADHAV; Initial Catalog = AMAR; Integrated Security = True; Pooling = False";
                    SqlConnection con1 = new SqlConnection(conlink);

                    SqlCommand cmd = new SqlCommand("DeleteData", con1);
                    con1.Open();

                    cmd.CommandType = CommandType.StoredProcedure;
                    int status = 0;
                    cmd.Parameters.AddWithValue("@Id", id);
                    cmd.Parameters.AddWithValue("@Status", status);
                    cmd.ExecuteNonQuery();
                    Console.WriteLine("Deleted Successfuly");
                }
                else
                {
                    Console.WriteLine("Wrong Password....!");
                }

            }

            public void ShowDeletedData()
            {
               // string conlink1 = "Data Source = VS_AMARJADHAV; Initial Catalog = AMAR; Integrated Security = True; Pooling = False";
                SqlConnection con1 = new SqlConnection(conlink);

                SqlCommand cmd = new SqlCommand("ShowDeletedData",con1);
                cmd.CommandType = CommandType.StoredProcedure;
                con1.Open();
                SqlDataReader dr = cmd.ExecuteReader();
                Console.WriteLine("  ID         NAME        ADDRESS");
                Console.WriteLine("__________________________________________");
                while (dr.Read())
                {
                    Console.Write("      " + dr["Id"]);
                    Console.Write("      " + dr["Name"]);
                    Console.Write("      " + dr["Address"]);
                    Console.Write("      " + dr["mobileNo"].ToString());
                    Console.WriteLine("\n --------------------------------");
                }

            }

        }

        static void Main(string[] args)
        {

            while (true)
            {
                Console.WriteLine("Enter Your Choice \n 1>Add Customer \n 2>Show Data \n 3>Update Data \n 4>Delete Data \n 5>Show Deleted Data");

                int ch= Convert.ToInt32(Console.ReadLine());

                Customer usr = new Customer();
                switch (ch)
                {
                    case 1: usr.AddStudent();
                            break;
                    case 2: usr.ShowData();
                                break;
                    case 3:usr.UpdateData();
                             break;
                    case 4:usr.DeleteData();
                             break;
                    case 5:usr.ShowDeletedData();
                             break;

                }

               
                

            }
            

           
        }
    }
}


/*
_________________________________________________________________________________________
    # DataBase:


    CREATE TABLE[dbo].[Customer]
     (

      [Id] INT          IDENTITY(1, 1) NOT NULL,

    [name]    VARCHAR(10) NULL,
    [address] VARCHAR(10) NULL,
    [status] INT NULL DEFAULT 1, 
    PRIMARY KEY CLUSTERED([Id] ASC)
);


______________________________________________________________________________________
   #StoreProcedure:
____________________________________________________________________________________

    CREATE PROCEDURE [dbo].[AddCustomer]
	@Name varchar(10),
	@Address varchar(10)
    AS
    Begin
	    insert into Customer(name,address) values(@Name,@Address)
    End

----------------------------------------------------------------------------------

    CREATE PROCEDURE [dbo].[ShowData]
	
    AS
    Begin
	    SELECT * from Customer where status!=0
    End

--------------------------------------------------------------------------------

    CREATE PROCEDURE [dbo].[UpadateName]
	@Id int,
	@Name varchar(10)	
    AS
    Begin
	    Update Customer
	    set name=@Name
	    where Id=@Id
    End

-----------------------------------------------------------------------------------

    CREATE PROCEDURE [dbo].[UpadateAddress]
	@Id int,
	@Address varchar(10)	
    AS
    Begin
	    Update Customer
	    set address=@Address
	    where Id=@Id
    End

----------------------------------------------------------------------------------


    CREATE PROCEDURE [dbo].[DeleteData]
	@Id int,
	@Status int
    AS
    Begin
	    Update Customer set
	    status=@Status
	    where Id=@Id
    End


-----------------------------------------------------------------------------------

    CREATE PROCEDURE [dbo].[ShowDeletedData]
	
    AS
    Begin
	    SELECT * from Customer where status=0
    End


_______________________________________________________________________________________
    */



